import{_ as s,c as a,o as n,aj as i}from"./chunks/framework.CM7BdzdB.js";const u=JSON.parse('{"title":"Monorepo Library Template","description":"","frontmatter":{},"headers":[],"relativePath":"en/templates/lib-monorepo.md","filePath":"en/templates/lib-monorepo.md"}'),e={name:"en/templates/lib-monorepo.md"},t=i(`<h1 id="monorepo-library-template" tabindex="-1">Monorepo Library Template <a class="header-anchor" href="#monorepo-library-template" aria-label="Permalink to &quot;Monorepo Library Template&quot;">​</a></h1><p>A monorepo library template based on pnpm + TypeScript for creating and managing multi-package JavaScript/TypeScript library projects.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>📦 Based on pnpm workspace</li><li>🔄 Unified build process</li><li>📘 TypeScript support</li><li>🧪 Jest testing framework</li><li>📊 Code coverage reports</li><li>📏 ESLint + Prettier code standards</li><li>📝 Automatic type declaration file generation</li><li>🔄 Version management (Changesets)</li><li>🚀 CI/CD workflows (GitHub Actions)</li><li>📚 Documentation site (VitePress)</li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create monorepo library project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-lib-monorepo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/cya-lib-monorepo-template</span></span></code></pre></div><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-lib-monorepo/</span></span>
<span class="line"><span>  ├── .changeset/           # Changesets configuration</span></span>
<span class="line"><span>  ├── .github/              # GitHub workflow configuration</span></span>
<span class="line"><span>  ├── docs/                 # Documentation</span></span>
<span class="line"><span>  │   ├── .vitepress/       # VitePress configuration</span></span>
<span class="line"><span>  │   └── index.md          # Documentation homepage</span></span>
<span class="line"><span>  ├── packages/             # Subpackages</span></span>
<span class="line"><span>  │   ├── core/             # Core package</span></span>
<span class="line"><span>  │   │   ├── src/          # Source code</span></span>
<span class="line"><span>  │   │   ├── tests/        # Tests</span></span>
<span class="line"><span>  │   │   └── package.json  # Package information</span></span>
<span class="line"><span>  │   ├── utils/            # Utilities package</span></span>
<span class="line"><span>  │   │   ├── src/          # Source code</span></span>
<span class="line"><span>  │   │   ├── tests/        # Tests</span></span>
<span class="line"><span>  │   │   └── package.json  # Package information</span></span>
<span class="line"><span>  │   └── template/         # Subpackage template</span></span>
<span class="line"><span>  ├── .eslintrc.js          # ESLint configuration</span></span>
<span class="line"><span>  ├── .prettierrc.js        # Prettier configuration</span></span>
<span class="line"><span>  ├── jest.config.js        # Jest configuration</span></span>
<span class="line"><span>  ├── tsconfig.json         # TypeScript configuration</span></span>
<span class="line"><span>  ├── package.json          # Root package information</span></span>
<span class="line"><span>  ├── pnpm-workspace.yaml   # pnpm workspace configuration</span></span>
<span class="line"><span>  └── README.md             # Project documentation</span></span></code></pre></div><h2 id="available-scripts" tabindex="-1">Available Scripts <a class="header-anchor" href="#available-scripts" aria-label="Permalink to &quot;Available Scripts&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build all packages</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Development mode (watch file changes)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Code linting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Code formatting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> format</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create changeset</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version-packages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Publish packages</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start documentation development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div><h2 id="creating-new-packages" tabindex="-1">Creating New Packages <a class="header-anchor" href="#creating-new-packages" aria-label="Permalink to &quot;Creating New Packages&quot;">​</a></h2><p>You can use Create Your App&#39;s package creation feature:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Execute in the project root directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-new-package</span></span></code></pre></div><p>Or manually copy the <code>packages/template</code> directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/my-new-package</span></span></code></pre></div><p>Then modify the package name and other information in <code>packages/my-new-package/package.json</code>.</p><h2 id="version-management" tabindex="-1">Version Management <a class="header-anchor" href="#version-management" aria-label="Permalink to &quot;Version Management&quot;">​</a></h2><p>This template uses Changesets for version management:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create changeset</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update version numbers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version-packages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Publish packages</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span></span></code></pre></div><h2 id="inter-package-dependencies" tabindex="-1">Inter-Package Dependencies <a class="header-anchor" href="#inter-package-dependencies" aria-label="Permalink to &quot;Inter-Package Dependencies&quot;">​</a></h2><p>Adding dependencies between subpackages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add dependency on core package in utils package</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @my-scope/core@workspace:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><h2 id="ci-cd-workflows" tabindex="-1">CI/CD Workflows <a class="header-anchor" href="#ci-cd-workflows" aria-label="Permalink to &quot;CI/CD Workflows&quot;">​</a></h2><p>This template includes the following GitHub Actions workflows:</p><ul><li><strong>CI</strong>: Runs tests and builds on Pull Requests</li><li><strong>Release</strong>: Publishes packages when merged to the main branch</li><li><strong>Docs</strong>: Builds and deploys documentation when merged to the main branch</li></ul><h2 id="custom-configuration" tabindex="-1">Custom Configuration <a class="header-anchor" href="#custom-configuration" aria-label="Permalink to &quot;Custom Configuration&quot;">​</a></h2><h3 id="pnpm-configuration" tabindex="-1">pnpm Configuration <a class="header-anchor" href="#pnpm-configuration" aria-label="Permalink to &quot;pnpm Configuration&quot;">​</a></h3><p>You can modify the workspace configuration in the <code>pnpm-workspace.yaml</code> file.</p><h3 id="typescript-configuration" tabindex="-1">TypeScript Configuration <a class="header-anchor" href="#typescript-configuration" aria-label="Permalink to &quot;TypeScript Configuration&quot;">​</a></h3><p>You can modify the TypeScript configuration in the root <code>tsconfig.json</code> and in each package&#39;s <code>tsconfig.json</code> file.</p><h3 id="eslint-configuration" tabindex="-1">ESLint Configuration <a class="header-anchor" href="#eslint-configuration" aria-label="Permalink to &quot;ESLint Configuration&quot;">​</a></h3><p>You can modify the ESLint configuration in the <code>.eslintrc.js</code> file.</p><h3 id="prettier-configuration" tabindex="-1">Prettier Configuration <a class="header-anchor" href="#prettier-configuration" aria-label="Permalink to &quot;Prettier Configuration&quot;">​</a></h3><p>You can modify the Prettier configuration in the <code>.prettierrc.js</code> file.</p><h3 id="jest-configuration" tabindex="-1">Jest Configuration <a class="header-anchor" href="#jest-configuration" aria-label="Permalink to &quot;Jest Configuration&quot;">​</a></h3><p>You can modify the Jest configuration in the <code>jest.config.js</code> file.</p><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><p>This template uses VitePress to build a documentation site, with source files located in the <code>docs</code> directory.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start documentation development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div>`,39),p=[t];function l(o,r,h,c,k,d){return n(),a("div",null,p)}const m=s(e,[["render",l]]);export{u as __pageData,m as default};
