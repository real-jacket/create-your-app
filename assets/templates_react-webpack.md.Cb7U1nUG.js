import{_ as a,c as s,o as e,aj as n}from"./chunks/framework.CM7BdzdB.js";const u=JSON.parse('{"title":"React Webpack 模板","description":"","frontmatter":{},"headers":[],"relativePath":"templates/react-webpack.md","filePath":"templates/react-webpack.md"}'),i={name:"templates/react-webpack.md"},p=n(`<h1 id="react-webpack-模板" tabindex="-1">React Webpack 模板 <a class="header-anchor" href="#react-webpack-模板" aria-label="Permalink to &quot;React Webpack 模板&quot;">​</a></h1><p>基于 Webpack 的 React 项目模板，提供完整的开发环境和构建配置。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>🚀 基于 Webpack 5 构建</li><li>⚛️ React 18 支持</li><li>📦 开箱即用的 Babel 配置</li><li>🎨 支持 CSS Modules 和 Sass</li><li>🔍 ESLint 和 Prettier 集成</li><li>🧪 Jest 测试框架集成</li><li>📱 响应式设计支持</li><li>🌐 多环境配置（开发、测试、生产）</li></ul><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><p>使用 Create Your App CLI 创建项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-webpack</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或使用简写命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span></code></pre></div><p>进入项目目录并启动开发服务器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-app/</span></span>
<span class="line"><span>├── public/               # 静态资源目录</span></span>
<span class="line"><span>│   ├── index.html        # HTML 模板</span></span>
<span class="line"><span>│   └── favicon.ico       # 网站图标</span></span>
<span class="line"><span>├── src/                  # 源代码目录</span></span>
<span class="line"><span>│   ├── assets/           # 资源文件（图片、字体等）</span></span>
<span class="line"><span>│   ├── components/       # 组件目录</span></span>
<span class="line"><span>│   ├── pages/            # 页面目录</span></span>
<span class="line"><span>│   ├── styles/           # 样式目录</span></span>
<span class="line"><span>│   ├── utils/            # 工具函数</span></span>
<span class="line"><span>│   ├── App.jsx           # 应用入口组件</span></span>
<span class="line"><span>│   └── index.jsx         # 应用入口文件</span></span>
<span class="line"><span>├── .babelrc              # Babel 配置</span></span>
<span class="line"><span>├── .eslintrc.js          # ESLint 配置</span></span>
<span class="line"><span>├── .prettierrc           # Prettier 配置</span></span>
<span class="line"><span>├── jest.config.js        # Jest 配置</span></span>
<span class="line"><span>├── webpack.config.js     # Webpack 配置</span></span>
<span class="line"><span>└── package.json          # 项目配置和依赖</span></span></code></pre></div><h2 id="可用脚本" tabindex="-1">可用脚本 <a class="header-anchor" href="#可用脚本" aria-label="Permalink to &quot;可用脚本&quot;">​</a></h2><ul><li><code>npm run dev</code> - 启动开发服务器</li><li><code>npm run build</code> - 构建生产版本</li><li><code>npm run test</code> - 运行测试</li><li><code>npm run lint</code> - 运行 ESLint 检查</li><li><code>npm run lint:fix</code> - 自动修复 ESLint 问题</li><li><code>npm run format</code> - 格式化代码</li></ul><h2 id="自定义配置" tabindex="-1">自定义配置 <a class="header-anchor" href="#自定义配置" aria-label="Permalink to &quot;自定义配置&quot;">​</a></h2><h3 id="webpack-配置" tabindex="-1">Webpack 配置 <a class="header-anchor" href="#webpack-配置" aria-label="Permalink to &quot;Webpack 配置&quot;">​</a></h3><p>可以通过修改 <code>webpack.config.js</code> 文件来自定义 Webpack 配置。</p><h3 id="babel-配置" tabindex="-1">Babel 配置 <a class="header-anchor" href="#babel-配置" aria-label="Permalink to &quot;Babel 配置&quot;">​</a></h3><p>可以通过修改 <code>.babelrc</code> 文件来自定义 Babel 配置。</p><h3 id="eslint-配置" tabindex="-1">ESLint 配置 <a class="header-anchor" href="#eslint-配置" aria-label="Permalink to &quot;ESLint 配置&quot;">​</a></h3><p>可以通过修改 <code>.eslintrc.js</code> 文件来自定义 ESLint 配置。</p><h2 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h2><p>构建生产版本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>构建完成后，<code>dist</code> 目录中的文件可以部署到任何静态文件服务器。</p>`,24),l=[p];function t(c,h,r,d,o,k){return e(),s("div",null,l)}const F=a(i,[["render",t]]);export{u as __pageData,F as default};
