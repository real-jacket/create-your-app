import{_ as s,c as a,o as i,aj as n}from"./chunks/framework.CM7BdzdB.js";const u=JSON.parse('{"title":"React Webpack Template","description":"","frontmatter":{},"headers":[],"relativePath":"en/templates/react-webpack.md","filePath":"en/templates/react-webpack.md"}'),e={name:"en/templates/react-webpack.md"},t=n(`<h1 id="react-webpack-template" tabindex="-1">React Webpack Template <a class="header-anchor" href="#react-webpack-template" aria-label="Permalink to &quot;React Webpack Template&quot;">​</a></h1><p>A modern React project template based on Webpack 5, with support for React 18, hot reloading, code splitting, CSS Modules, Jest testing, ESLint + Prettier, and more.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li><strong>Webpack 5</strong>: Latest version of Webpack with improved build performance and module federation</li><li><strong>React 18</strong>: Latest version of React with concurrent rendering and automatic batching</li><li><strong>Hot Reloading</strong>: Fast refresh for React components during development</li><li><strong>Code Splitting</strong>: Automatically split your code into smaller chunks for better performance</li><li><strong>CSS Modules</strong>: Local scoping of CSS by default</li><li><strong>Jest</strong>: Testing framework with React Testing Library</li><li><strong>ESLint + Prettier</strong>: Code quality and formatting tools</li><li><strong>Git Hooks</strong>: Husky and lint-staged for running scripts before commits</li><li><strong>Conventional Commits</strong>: Commitlint for enforcing commit message conventions</li></ul><h2 id="creating-a-project" tabindex="-1">Creating a Project <a class="header-anchor" href="#creating-a-project" aria-label="Permalink to &quot;Creating a Project&quot;">​</a></h2><p>To create a new project using this template, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-webpack</span></span></code></pre></div><p>Or use the shortcut:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rw</span></span></code></pre></div><h2 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><p>The project structure is organized as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-app/</span></span>
<span class="line"><span>├── .husky/                 # Git hooks</span></span>
<span class="line"><span>├── .vscode/                # VS Code settings</span></span>
<span class="line"><span>├── config/                 # Webpack configuration</span></span>
<span class="line"><span>│   ├── webpack.common.js   # Common webpack configuration</span></span>
<span class="line"><span>│   ├── webpack.dev.js      # Development webpack configuration</span></span>
<span class="line"><span>│   └── webpack.prod.js     # Production webpack configuration</span></span>
<span class="line"><span>├── public/                 # Static assets</span></span>
<span class="line"><span>│   ├── favicon.ico         # Favicon</span></span>
<span class="line"><span>│   ├── index.html          # HTML template</span></span>
<span class="line"><span>│   └── manifest.json       # Web app manifest</span></span>
<span class="line"><span>├── src/                    # Source code</span></span>
<span class="line"><span>│   ├── assets/             # Assets (images, fonts, etc.)</span></span>
<span class="line"><span>│   ├── components/         # React components</span></span>
<span class="line"><span>│   ├── hooks/              # Custom React hooks</span></span>
<span class="line"><span>│   ├── pages/              # Page components</span></span>
<span class="line"><span>│   ├── styles/             # Global styles</span></span>
<span class="line"><span>│   ├── utils/              # Utility functions</span></span>
<span class="line"><span>│   ├── App.tsx             # Root component</span></span>
<span class="line"><span>│   ├── index.tsx           # Entry point</span></span>
<span class="line"><span>│   └── types.d.ts          # TypeScript declarations</span></span>
<span class="line"><span>├── .babelrc                # Babel configuration</span></span>
<span class="line"><span>├── .eslintrc.js            # ESLint configuration</span></span>
<span class="line"><span>├── .gitignore              # Git ignore file</span></span>
<span class="line"><span>├── .prettierrc             # Prettier configuration</span></span>
<span class="line"><span>├── jest.config.js          # Jest configuration</span></span>
<span class="line"><span>├── package.json            # Package information</span></span>
<span class="line"><span>├── README.md               # Project documentation</span></span>
<span class="line"><span>└── tsconfig.json           # TypeScript configuration</span></span></code></pre></div><h2 id="available-scripts" tabindex="-1">Available Scripts <a class="header-anchor" href="#available-scripts" aria-label="Permalink to &quot;Available Scripts&quot;">​</a></h2><p>In the project directory, you can run:</p><h3 id="npm-start" tabindex="-1"><code>npm start</code> <a class="header-anchor" href="#npm-start" aria-label="Permalink to &quot;\`npm start\`&quot;">​</a></h3><p>Runs the app in development mode. Open <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a> to view it in the browser.</p><p>The page will reload if you make edits. You will also see any lint errors in the console.</p><h3 id="npm-run-build" tabindex="-1"><code>npm run build</code> <a class="header-anchor" href="#npm-run-build" aria-label="Permalink to &quot;\`npm run build\`&quot;">​</a></h3><p>Builds the app for production to the <code>dist</code> folder. It correctly bundles React in production mode and optimizes the build for the best performance.</p><p>The build is minified and the filenames include the hashes.</p><h3 id="npm-test" tabindex="-1"><code>npm test</code> <a class="header-anchor" href="#npm-test" aria-label="Permalink to &quot;\`npm test\`&quot;">​</a></h3><p>Launches the test runner in the interactive watch mode.</p><h3 id="npm-run-lint" tabindex="-1"><code>npm run lint</code> <a class="header-anchor" href="#npm-run-lint" aria-label="Permalink to &quot;\`npm run lint\`&quot;">​</a></h3><p>Runs ESLint to check for code quality issues.</p><h3 id="npm-run-format" tabindex="-1"><code>npm run format</code> <a class="header-anchor" href="#npm-run-format" aria-label="Permalink to &quot;\`npm run format\`&quot;">​</a></h3><p>Runs Prettier to format your code.</p><h2 id="customizing-webpack-configuration" tabindex="-1">Customizing Webpack Configuration <a class="header-anchor" href="#customizing-webpack-configuration" aria-label="Permalink to &quot;Customizing Webpack Configuration&quot;">​</a></h2><p>You can customize the Webpack configuration by modifying the files in the <code>config</code> directory:</p><ul><li><code>webpack.common.js</code>: Common configuration for both development and production</li><li><code>webpack.dev.js</code>: Development-specific configuration</li><li><code>webpack.prod.js</code>: Production-specific configuration</li></ul><p>Example of adding a custom loader:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// config/webpack.common.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ... existing configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  module: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rules: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ... existing rules</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        test:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#22863A;--shiki-light-font-weight:bold;--shiki-dark:#85E89D;--shiki-dark-font-weight:bold;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">csv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        loader: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;csv-loader&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        options: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          dynamicTyping: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          header: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          skipEmptyLines: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="customizing-babel-configuration" tabindex="-1">Customizing Babel Configuration <a class="header-anchor" href="#customizing-babel-configuration" aria-label="Permalink to &quot;Customizing Babel Configuration&quot;">​</a></h2><p>You can customize the Babel configuration by modifying the <code>.babelrc</code> file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;presets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@babel/preset-env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@babel/preset-react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;@babel/preset-typescript&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;plugins&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;@babel/plugin-transform-runtime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;regenerator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="customizing-eslint-configuration" tabindex="-1">Customizing ESLint Configuration <a class="header-anchor" href="#customizing-eslint-configuration" aria-label="Permalink to &quot;Customizing ESLint Configuration&quot;">​</a></h2><p>You can customize the ESLint configuration by modifying the <code>.eslintrc.js</code> file:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extends: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;eslint:recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;plugin:react/recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;plugin:@typescript-eslint/recommended&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;plugin:prettier/recommended&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ... existing configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rules: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Add your custom rules here</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;react/prop-types&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;off&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;no-console&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;warn&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="customizing-prettier-configuration" tabindex="-1">Customizing Prettier Configuration <a class="header-anchor" href="#customizing-prettier-configuration" aria-label="Permalink to &quot;Customizing Prettier Configuration&quot;">​</a></h2><p>You can customize the Prettier configuration by modifying the <code>.prettierrc</code> file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;semi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tabWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;printWidth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;singleQuote&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;trailingComma&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;none&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;bracketSpacing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="adding-dependencies" tabindex="-1">Adding Dependencies <a class="header-anchor" href="#adding-dependencies" aria-label="Permalink to &quot;Adding Dependencies&quot;">​</a></h2><p>To add a new dependency, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-name</span></span></code></pre></div><p>To add a development dependency, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-name</span></span></code></pre></div><h2 id="creating-components" tabindex="-1">Creating Components <a class="header-anchor" href="#creating-components" aria-label="Permalink to &quot;Creating Components&quot;">​</a></h2><p>You can use Create Your App to generate components:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Button</span></span></code></pre></div><p>This will create a new component in the <code>src/components</code> directory with the following structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/components/Button/</span></span>
<span class="line"><span>├── Button.tsx</span></span>
<span class="line"><span>├── Button.module.css</span></span>
<span class="line"><span>└── Button.test.tsx</span></span></code></pre></div><p>You can customize the component generation by specifying options:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Button</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> class</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --style</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scss</span></span></code></pre></div><p>For more information on component generation, see the <a href="./../../guide/configuration.html#component-configuration">Component Configuration</a> guide.</p>`,53),p=[t];function l(h,o,r,k,c,d){return i(),a("div",null,p)}const E=s(e,[["render",l]]);export{u as __pageData,E as default};
