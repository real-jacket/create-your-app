import{_ as a,c as s,o as i,aj as e}from"./chunks/framework.CM7BdzdB.js";const g=JSON.parse('{"title":"模板列表","description":"","frontmatter":{},"headers":[],"relativePath":"templates/index.md","filePath":"templates/index.md"}'),t={name:"templates/index.md"},p=e(`<h1 id="模板列表" tabindex="-1">模板列表 <a class="header-anchor" href="#模板列表" aria-label="Permalink to &quot;模板列表&quot;">​</a></h1><p>Create Your App 提供了多种项目模板，满足不同的开发需求。</p><h2 id="react-模板" tabindex="-1">React 模板 <a class="header-anchor" href="#react-模板" aria-label="Permalink to &quot;React 模板&quot;">​</a></h2><ul><li><a href="/templates/react-webpack.html">React Webpack 模板</a> - 基于 Webpack 的 React 项目模板</li><li><a href="/templates/react-cra-ts-h5.html">React CRA TypeScript H5 模板</a> - 基于 Create React App 的 TypeScript H5 项目模板</li><li><a href="/templates/react-vite-h5.html">React Vite H5 模板</a> - 基于 Vite 的 React H5 项目模板</li><li><a href="/templates/react-vite-admin.html">React Vite Admin 模板</a> - 基于 Vite 的 React 管理后台项目模板</li></ul><h2 id="库模板" tabindex="-1">库模板 <a class="header-anchor" href="#库模板" aria-label="Permalink to &quot;库模板&quot;">​</a></h2><ul><li><a href="/templates/lib.html">库模板</a> - 用于创建 JavaScript/TypeScript 库的模板</li><li><a href="/templates/lib-monorepo.html">Monorepo 库模板</a> - 用于创建基于 Monorepo 的多包库的模板</li></ul><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><p>使用 Create Your App CLI 创建项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 基本用法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定模板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-webpack</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或使用简写命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/create-your-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span></code></pre></div><p>查看每个模板的详细文档，了解更多信息。</p><h2 id="创建自定义模板" tabindex="-1">创建自定义模板 <a class="header-anchor" href="#创建自定义模板" aria-label="Permalink to &quot;创建自定义模板&quot;">​</a></h2><p>你可以使用 <code>transform</code> 命令将现有项目转换为模板：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">源项目路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">目标模板路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-custom-template</span></span></code></pre></div><p>然后使用自定义模板创建项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">目标模板路</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="模板结构" tabindex="-1">模板结构 <a class="header-anchor" href="#模板结构" aria-label="Permalink to &quot;模板结构&quot;">​</a></h2><p>Create Your App 的模板遵循以下结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>template/             # 模板目录</span></span>
<span class="line"><span>  ├── src/            # 源代码</span></span>
<span class="line"><span>  ├── public/         # 静态资源</span></span>
<span class="line"><span>  ├── ...             # 其他文件和目录</span></span>
<span class="line"><span>template.json         # 模板配置</span></span>
<span class="line"><span>package.json          # 包信息</span></span></code></pre></div><p>其中 <code>template.json</code> 包含了模板的配置信息，主要是 package.json 中的依赖和脚本等信息。</p>`,19),n=[p];function l(h,r,k,c,d,o){return i(),s("div",null,n)}const y=a(t,[["render",l]]);export{g as __pageData,y as default};
