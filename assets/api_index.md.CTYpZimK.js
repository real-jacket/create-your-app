import{_ as s,c as a,o as i,aj as t}from"./chunks/framework.CM7BdzdB.js";const y=JSON.parse('{"title":"命令行 API","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),e={name:"api/index.md"},n=t(`<h1 id="命令行-api" tabindex="-1">命令行 API <a class="header-anchor" href="#命令行-api" aria-label="Permalink to &quot;命令行 API&quot;">​</a></h1><p>Create Your App 提供了一系列命令行 API，用于创建项目、组件和管理 monorepo。</p><h2 id="主要命令" tabindex="-1">主要命令 <a class="header-anchor" href="#主要命令" aria-label="Permalink to &quot;主要命令&quot;">​</a></h2><h3 id="cya-create" tabindex="-1"><code>cya create</code> <a class="header-anchor" href="#cya-create" aria-label="Permalink to &quot;\`cya create\`&quot;">​</a></h3><p>创建新项目。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>&lt;app-name&gt;</code>：项目名称，必填</li></ul><p><strong>选项：</strong></p><ul><li><code>-f, --force</code>：如果目标目录已存在，强制覆盖</li><li><code>-t, --template &lt;path-to-template&gt;</code>：指定模板路径或名称</li></ul><p><strong>示例：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用默认模板创建项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用指定模板创建项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rjkt/cya-react-cra-ts-h5-template</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 强制覆盖已存在的目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><h3 id="cya-component" tabindex="-1"><code>cya component</code> <a class="header-anchor" href="#cya-component" aria-label="Permalink to &quot;\`cya component\`&quot;">​</a></h3><p>创建组件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [component-name] [options]</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>[component-name]</code>：组件名称，可选（如果不提供，会通过交互式命令行询问）</li></ul><p><strong>选项：</strong></p><ul><li><code>-t, --template &lt;component-type-template&gt;</code>：组件类型或模板目录，默认为 <code>react</code></li><li><code>-d, --dir &lt;dir-of-component&gt;</code>：组件创建的目录</li></ul><p><strong>示例：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建React组件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyComponent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建TypeScript React组件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyComponent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-react</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定组件目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MyComponent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/components</span></span></code></pre></div><h3 id="cya-package" tabindex="-1"><code>cya package</code> <a class="header-anchor" href="#cya-package" aria-label="Permalink to &quot;\`cya package\`&quot;">​</a></h3><p>在 monorepo 项目中创建子包。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pkg-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>&lt;pkg-name&gt;</code>：包名称，必填</li></ul><p><strong>选项：</strong></p><ul><li><code>-f, --force</code>：如果目标目录已存在，强制覆盖</li><li><code>-d, --dir &lt;dir-path&gt;</code>：创建包的目录，默认为 <code>packages</code></li><li><code>-t, --template &lt;template-path&gt;</code>：模板目录路径，默认为 <code>packages/template</code></li><li><code>-s, --scope &lt;scope&gt;</code>：包的作用域，默认为 <code>@rjkt</code></li></ul><p><strong>示例：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建基本包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定作用域</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @custom</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定目标目录和模板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/custom-template</span></span></code></pre></div><h3 id="cya-transform" tabindex="-1"><code>cya transform</code> <a class="header-anchor" href="#cya-transform" aria-label="Permalink to &quot;\`cya transform\`&quot;">​</a></h3><p>将源项目转换为模板。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">source-template-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">target-template-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><p><strong>参数：</strong></p><ul><li><code>&lt;source-template-path&gt;</code>：源项目路径，必填</li><li><code>&lt;target-template-path&gt;</code>：目标模板路径，必填</li></ul><p><strong>选项：</strong></p><ul><li><code>-n, --name &lt;package-name&gt;</code>：模板包名</li></ul><p><strong>示例：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换项目为模板</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./my-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./templates/my-template</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定模板包名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./my-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./templates/my-template</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-custom-template</span></span></code></pre></div><h2 id="快捷命令" tabindex="-1">快捷命令 <a class="header-anchor" href="#快捷命令" aria-label="Permalink to &quot;快捷命令&quot;">​</a></h2><h3 id="cya-react" tabindex="-1"><code>cya react</code> <a class="header-anchor" href="#cya-react" aria-label="Permalink to &quot;\`cya react\`&quot;">​</a></h3><p>使用 create-react-app 创建 React 项目。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><h3 id="cya-vue" tabindex="-1"><code>cya vue</code> <a class="header-anchor" href="#cya-vue" aria-label="Permalink to &quot;\`cya vue\`&quot;">​</a></h3><p>使用 vite 创建 Vue 项目。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><h2 id="其他命令" tabindex="-1">其他命令 <a class="header-anchor" href="#其他命令" aria-label="Permalink to &quot;其他命令&quot;">​</a></h2><h3 id="cya-list" tabindex="-1"><code>cya list</code> <a class="header-anchor" href="#cya-list" aria-label="Permalink to &quot;\`cya list\`&quot;">​</a></h3><p>列出所有内置模板。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><h3 id="cya-version" tabindex="-1"><code>cya --version</code> <a class="header-anchor" href="#cya-version" aria-label="Permalink to &quot;\`cya --version\`&quot;">​</a></h3><p>显示当前版本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><h3 id="cya-help" tabindex="-1"><code>cya --help</code> <a class="header-anchor" href="#cya-help" aria-label="Permalink to &quot;\`cya --help\`&quot;">​</a></h3><p>显示帮助信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cya</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div>`,56),p=[n];function l(h,k,c,d,o,r){return i(),a("div",null,p)}const F=s(e,[["render",l]]);export{y as __pageData,F as default};
